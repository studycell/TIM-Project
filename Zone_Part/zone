//
// Created by arbiter on 2021/12/22.
//
#include <iostream>

using namespace std;

//class SingleUser {
//private:
//    SingleUser();
//    SingleUser(const SingleUser &);
//public:
//    static SingleUser& GetInstance() {
//        static SingleUser instance;  //C++11标准下local static对象初始化在多线程条件下安全
//        return instance;
//    }
//
//private:
//    //class members
//};
//
//class SingleAdmin
//{
//private:
//    SingleAdmin();
//    SingleAdmin(const SingleUser &);
//public:
//    static SingleAdmin& GetInstance()
//    {
//        static SingleAdmin instance;  //C++11标准下local static对象初始化在多线程条件下安全
//        return instance;
//    }
//
//private:
//    //class members
//};

//class Operation
//{
//public:
//    virtual ~Operation()= default;
//    virtual void operation() = 0;
//};
//
//class Thumbs_up :public Operation
//{
//public:
//    void operation() override
//    {
//        cout<<"点赞成功";
//    }
//};
//
//class Comment: public Operation
//{
//public:
//    void operation() override
//    {
//        cout<<"评论成功";
//    }
//};
//
//class Publish: public Operation
//{
//public:
//    void operation() override
//    {
//        cout<<"发表成功";
//    }
//};
//
//class Delete
//{
//public:
//    virtual ~Delete()= default;
//    virtual void del() = 0;
//};
//
//class del_thumb: public Delete
//{
//public:
//    void del() override
//    {
//        cout<<"成功删除点赞";
//    }
//};
//
//class del_comment: public Delete
//{
//public:
//    void del() override
//    {
//        cout<<"成功删除评论";
//    }
//};
//
//class del_publish: public Delete
//{
//public:
//    void del() override
//    {
//        cout<<"成功删除动态";
//    }
//};
//class Factory
//{
//public:
//    static Operation * CreateOperation(string ope)
//    {
//        if (ope[0] == 'T')
//            return new Thumbs_up();
//        else if(ope[0] == 'C')
//            return new Comment();
//        else if(ope[0] == 'P')
//            return new Publish();
//        else{
//            cout<<"无对应操作";
//            exit(-1);
//        }
//    }
//    static Delete * CreateDelete(string ope)
//    {
//        if(ope[4] == 't')
//            return new del_thumb();
//        else if(ope[4] == 'c')
//            return new del_comment();
//        else if(ope[4] == 'p')
//            return new del_publish();
//        else
//        {
//            cout<<"无对应的删除操作";
//            exit(-1);
//        }
//    }
//};

class Interface
{
public:
    string description = "系统默认界面";
    virtual void getDescription(){cout<<description;}
};

class InterfaceDecorate: public Interface
{
public:
    void getDescription() override{cout<<description;}
};

class RedInterface: public Interface
{
public:
    RedInterface(){description = "红色界面";}
};

class BlueInterface: public Interface
{
public:
    BlueInterface(){description = "蓝色界面";}
};
class Animation1: public InterfaceDecorate
{
public:
    Interface * base;
    void getDescription() override
    {
        base->getDescription();
        cout<<",动画1";
    }
    explicit Animation1(Interface * d){base = d;}
};

class Animation2: public InterfaceDecorate
{
public:
    Interface * base;
    void getDescription() override
    {
        base->getDescription();
        cout<<"，动画2";
    }
    explicit Animation2(Interface * d){base = d;}
};
int main()
{
//    Operation * p1 = Factory::CreateOperation("Thumb_up");
//    p1->operation();
//    delete p1;
    Interface * I1 = new RedInterface();
    I1->getDescription();
    I1 = new Animation1(I1);
    I1->getDescription();
    I1 = new Animation2(I1);
    I1->getDescription();
    delete I1;
    return 0;
}
